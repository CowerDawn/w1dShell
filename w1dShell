#!/bin/bash
clear
CONFIG_FILE="usconf.conf"

declare -A user_rights

read_config() {
    if [[ ! -f "$CONFIG_FILE" ]]; then
        echo "Error: Configuration file '$CONFIG_FILE' not found."
        exit 1
    fi

    while IFS= read -r line; do
        if [[ "$line" =~ ^user= ]]; then
            user=$(echo "$line" | cut -d'=' -f2)
        elif [[ "$line" =~ ^rootc= ]]; then
            rootc=$(echo "$line" | cut -d'=' -f2)
            user_rights["$user"]="$rootc"
        fi
    done < "$CONFIG_FILE"
}

is_forbidden() {
    local user=$1
    local cmd=$2

    if [[ "$user" == "root" ]]; then
        return 1  
    fi

    if [[ -z "${user_rights[$user]}" ]]; then
        return 0  
    fi

    local rootc=${user_rights[$user]}

    if [[ "$rootc" == "on" ]]; then
        return 1  
    else
        return 0  
    fi
}

read_config

current_user=$(whoami)

root_commands=("sudo" "su" "doas" "pkexec" "systemctl" "mount" "umount" "dd" "fdisk" "gdisk" "parted" "mkfs" "fsck" "chown" "chmod" "chgrp" "passwd" "visudo" "adduser" "deluser" "addgroup" "delgroup" "reboot" "shutdown" "poweroff" "halt")

shut() {
    echo "Shutting down the system..."
    sudo shutdown -h now
}

openp() {
    local program=$1
    echo "Opening $program..."
    $program &
}

closep() {
    local program=$1
    echo "Closing $program..."
    pkill -f $program
}

while true; do
    read -p "w1dShell> " input

    read -ra cmd <<< "$input"

    if [[ " ${root_commands[@]} " =~ " ${cmd[0]} " ]] && ! is_forbidden "$current_user" "${cmd[0]}"; then
        echo "Error: Command '${cmd[0]}' is forbidden for user '$current_user'."
    else
        case "${cmd[0]}" in
            shut)
                shut
                ;;
            openp)
                if [[ -n "${cmd[1]}" ]]; then
                    openp "${cmd[1]}"
                else
                    echo "Usage: openp <program>"
                fi
                ;;
            closep)
                if [[ -n "${cmd[1]}" ]]; then
                    closep "${cmd[1]}"
                else
                    echo "Usage: closep <program>"
                fi
                ;;
            exit)
                echo "Exiting w1dShell..."
                exit 0
                ;;
            *)
                eval "$input"
                ;;
        esac
    fi
done
